# SQL Server MCP Server Environment Configuration
# Copy this file to .env and update with your actual values

# =============================================================================
# REQUIRED CONFIGURATION
# =============================================================================

# SQL Server hostname or IP address
# Examples: 
# - localhost (for local SQL Server)
# - myserver.database.windows.net (for Azure SQL Database)
# - 192.168.1.100 (for IP address)
# - myserver.domain.com (for domain server)
SQLSERVER_SERVER=myserver.database.windows.net

# =============================================================================
# AUTHENTICATION (Choose one method)
# =============================================================================

# Method 1: SQL Server Authentication (most common)
SQLSERVER_USERNAME=your_username
SQLSERVER_PASSWORD=your_password

# Method 2: Windows Authentication (uncomment if using)
# SQLSERVER_USE_WINDOWS_AUTH=true

# =============================================================================
# OPTIONAL CONNECTION SETTINGS
# =============================================================================

# Target database (default: master)
SQLSERVER_DATABASE=your_database

# ODBC Driver name (default: ODBC Driver 17 for SQL Server)
SQLSERVER_DRIVER=ODBC Driver 17 for SQL Server

# Connection encryption (default: yes)
# Options: yes, no, optional
SQLSERVER_ENCRYPT=yes

# Trust server certificate (default: yes)
# Set to 'no' for production with proper SSL certificates
SQLSERVER_TRUST_CERTIFICATE=yes

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================

# Example 1: Local SQL Server with SQL Authentication
# SQLSERVER_SERVER=localhost
# SQLSERVER_DATABASE=MyDatabase
# SQLSERVER_USERNAME=sa
# SQLSERVER_PASSWORD=MyPassword123!
# SQLSERVER_ENCRYPT=no
# SQLSERVER_TRUST_CERTIFICATE=yes

# Example 2: Azure SQL Database
# SQLSERVER_SERVER=myserver.database.windows.net
# SQLSERVER_DATABASE=MyAzureDB
# SQLSERVER_USERNAME=myuser@myserver
# SQLSERVER_PASSWORD=MyAzurePassword123!
# SQLSERVER_ENCRYPT=yes
# SQLSERVER_TRUST_CERTIFICATE=no

# Example 3: On-premises SQL Server with Windows Authentication
# SQLSERVER_SERVER=myserver.domain.com
# SQLSERVER_DATABASE=ProductionDB
# SQLSERVER_USE_WINDOWS_AUTH=true
# SQLSERVER_ENCRYPT=yes
# SQLSERVER_TRUST_CERTIFICATE=yes

# Example 4: SQL Server Express LocalDB
# SQLSERVER_SERVER=(localdb)\MSSQLLocalDB
# SQLSERVER_DATABASE=MyLocalDB
# SQLSERVER_USERNAME=
# SQLSERVER_PASSWORD=
# SQLSERVER_USE_WINDOWS_AUTH=true
# SQLSERVER_ENCRYPT=no

# Example 5: SQL Server with custom port
# SQLSERVER_SERVER=myserver.domain.com,1433
# SQLSERVER_DATABASE=MyDatabase
# SQLSERVER_USERNAME=myuser
# SQLSERVER_PASSWORD=MyPassword123!
# SQLSERVER_ENCRYPT=yes
# SQLSERVER_TRUST_CERTIFICATE=yes

# =============================================================================
# SECURITY NOTES
# =============================================================================
# 
# 1. Never commit this file with real credentials to version control
# 2. Use Docker secrets or external secret management in production
# 3. Rotate credentials regularly
# 4. Use Windows Authentication when possible for enhanced security
# 5. Enable encryption for production environments
# 6. Use proper SSL certificates instead of trusting server certificates
# 7. Limit user permissions to minimum required access
# 8. For Azure SQL Database, use the full username format: user@servername
#
# =============================================================================

# =============================================================================
# TROUBLESHOOTING TIPS
# =============================================================================
#
# Connection Issues:
# - Verify server name and port (default: 1433)
# - Check firewall settings
# - Ensure SQL Server is running and accepting connections
# - For Azure SQL Database, check firewall rules
#
# Authentication Issues:
# - Verify username and password
# - For Azure SQL Database, use full username: user@servername
# - Check if SQL Server authentication is enabled
# - Verify user permissions on target database
#
# SSL/TLS Issues:
# - Set SQLSERVER_TRUST_CERTIFICATE=yes for self-signed certificates
# - Set SQLSERVER_ENCRYPT=no to disable encryption (not recommended for production)
# - Use proper SSL certificates for production environments
#
# =============================================================================